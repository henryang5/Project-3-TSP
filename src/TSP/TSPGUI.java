package TSP;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class TSPGUI extends javax.swing.JFrame 
{
    
    private ArrayList<Cities> verticies = new ArrayList<Cities>();
    private String[] vertex; 
    private int[][] edges; 

    public TSPGUI() 
    {
        initComponents();
          // set add button to default 
        // this.getRootPane().setDefaultButton(displayJButton);
        // set the icon on main form 
        this.setIconImage(Toolkit.getDefaultToolkit()
                .getImage("src/Data/TSPIcon.png"));
        // Center form
        this.setLocationRelativeTo(null);
        
        readFromFile(); 
    }
    
     //Java docs for Readfrom File
    public void readFromFile() 
    {
        try 
        {
            verticies.clear();  
            String fileName = ""; 
            JFileChooser myFileChooser = new JFileChooser("src/Data");
            FileNameExtensionFilter filter = new 
                        FileNameExtensionFilter("Text File", "txt", "Data"); 
            myFileChooser.setFileFilter(filter);
            int returnVal = myFileChooser.showOpenDialog(null); 
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File theFile = myFileChooser.getSelectedFile(); 
                fileName = theFile.getPath(); 
            }     
            FileReader inputFile = new FileReader(fileName);  
            BufferedReader input = new BufferedReader(inputFile);
            String line = input.readLine();     // Read first line of file 
            while(line != null)
            {
                Cities newVertex = new Cities();
                // Use the stringtokenizer class to seperate fields in the line 
                StringTokenizer token = new StringTokenizer(line, " "); 
                while(token.hasMoreTokens())
                {
                    newVertex.setVertex(token.nextToken());  
                    newVertex.setX(Integer.parseInt(token.nextToken())); 
                    newVertex.setY(Integer.parseInt(token.nextToken())); 
                }
                // add the verticies to the arraylist 
                // Read the next line
               verticies.add(newVertex); 
               line = input.readLine();
            }
            vertex = new String[verticies.size()]; 
            edges = new int[verticies.size()][2]; 
            createArray(); 
            input.close();
        } 
        catch(FileNotFoundException exp)
        {
            // exp.printStackTrace(); 
            // better: JFilecooser to select file 
            JFileChooser myFileChooser = new JFileChooser("src/Data");
            FileNameExtensionFilter filter = new 
                        FileNameExtensionFilter("Text File", "txt", "Data"); 
            myFileChooser.setFileFilter(filter);
            int returnVal = myFileChooser.showOpenDialog(null); 
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File theFile = myFileChooser.getSelectedFile(); 
                String fileName = theFile.getPath(); 
            }
            else 
                System.out.println("Open command cancelled by the user");
        }
        catch(IOException exp)
        {
            exp.printStackTrace();        
        }
    }

    public void createArray()
    {
        for (int i = 0; i < verticies.size();i++) 
        {
            vertex[i] = verticies.get(i).getVertex();
            edges[i][0] = verticies.get(i).getX();
            edges[i][1] = verticies.get(i).getY();
        }
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            try
            {    
                SplashJDialog yes = new SplashJDialog(null, true);
                new TSPGUI().setVisible(true); 

            } catch (Exception e)
            {
                e.printStackTrace();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
